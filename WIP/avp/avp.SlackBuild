#!/bin/sh

# Slackware build script for NGUNIX 
#
# Copyright 2015 Gethyn ThomasQuail <gethyn@bloodbathsoftworks.com>
# All rights reserved.
#
# Based on:
# SBo's cmake-template
# Bits of Virtualbox SlackBuild by Heinz Wiesinger, Amsterdam, The Netherlands
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=NGUNIX
VERSION=${VERSION:-4385e4fa81a743baa75379470f9b337307d0244e}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    # ARM compilation is possible, but need to use the -DNOASM compile flag
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# Build options
if [ "${XMMS:-yes}" = "yes" ]; then
  xmms="-DXMMSCTL"
else
  xmms=""
fi

if [ "${FMOD:-yes}" = "yes" ]; then
  fmod="-DFMOD LDFLAGS=-lfmodex"
else
  fmod=""
fi

if [ "${DNOASM:-yes}" = "yes" ]; then
  dnoasm="-DNOASM"
else
  dnoasm=""
fi

set -e # Exit on most errors

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
unzip $CWD/$PRGNAM-$VERSION.zip
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Builds release for we don't need a debug, at least I assume you don't
make BASE_CFLAGS=-DFMOD LDFLAGS=-lfmodex build_release

# Makes these folders so we can copy it into the Slackware games standard
# It goes into a sub folder because this can allow installation of
# other Quake engines.
mkdir -p $PKG/usr/share/games/quake/ngunix
mkdir -p $PKG/usr/games

# Makes desktop file related directories
mkdir -p $PKG/usr/share/applications
mkdir -p $PKG/usr/share/pixmaps

# Copies over compiled binary
cp -a ngunix.x11 $PKG/usr/share/games/quake/ngunix

# Copies over shell script to play with ease
cp -a $CWD/stuff/ngunix $PKG/usr/games
chmod 0755 $PKG/usr/games/ngunix

# Copies over desktop file and icon
cp -a $CWD/stuff/ngunix.desktop $PKG/usr/share/applications
cp -a $CWD/stuff/ngunix.xpm $PKG/usr/share/pixmaps

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  CMDS CVARS LICENSE README \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
